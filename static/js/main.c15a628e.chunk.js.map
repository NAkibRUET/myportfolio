{"version":3,"sources":["constants/appConfig.js","components/weather.js","components/Home/index.js","components/header.js","constants/theme.js","hoc/layout.js","routes.js","registerServiceWorker.js","index.js"],"names":["APPCONFIG","WEATHER_API_KEY","getImageUrl","icon","Weather","React","Component","constructor","props","super","this","state","renderHourly","weatherData","hourly","length","i","map","element","index","Grid","item","xs","key","dt","Typography","align","variant","style","color","hour10","ampm10","Date","getHours","formatHour","Math","round","temp","src","weather","display","margin","padding","width","render","classes","url1","timeStamp","current","months1","getMonth","date","getDate","backgroundImage","className","WeatherDiv1","CT_NAME","container","lg","daily","day","night","feels_like","images","main","withStyles","theme","textColor","images2","sections","marginTop","Home","weatherData1","weatherData2","loading","noInternet1","noInternet2","componentDidMount","setState","setInterval","Axios","get","AppConfig","then","response","data","setTimeout","catch","Paper","elevation","containerDiv","spacing","md","sm","personalInfo","Spinner","size","value","hourHandLength","hourHandOppositeLength","hourHandWidth","hourMarksLength","hourMarksWidth","minuteHandLength","minuteHandOppositeLength","minuteHandWidth","minuteMarksWidth","secondHandLength","secondHandOppositeLength","secondHandWidth","minuteMarksLength","renderHourMarks","renderMinuteHand","renderMinuteMarks","renderSecondHand","ClockPos","textAlign","background","borderRadius","marginBottom","height","marginLeft","marginRight","backgroundColor","borderColor","maxWidth","NavbarPage","isOpen","toggleCollapse","dark","expand","onClick","id","navbar","right","active","to","createMuiTheme","palette","type","primary","cyan","contrastText","secondary","green","Layout","darkTheme","children","Routes","path","exact","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","error","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c15a628e.chunk.js","sourcesContent":["const APPCONFIG = {\n  WEATHER_API_KEY: \"4fd7addc78281697bde98a701e9006d6\",\n};\nexport default APPCONFIG;\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Grid, Paper, Typography } from \"@material-ui/core\";\n\nconst styles = (theme) => ({\n  textColor: {\n    color: \"#7f7f7f\",\n  },\n  images: {\n    display: \"block\",\n    margin: \"-15px auto\",\n    padding: \"0\",\n    width: \"100px\",\n  },\n  images2: {\n    display: \"block\",\n    margin: \"-15px auto\",\n    padding: \"0\",\n    width: \"50px\",\n  },\n\n  sections: {\n    marginTop: \"20px\",\n  },\n  WeatherDiv1: {\n    padding: \"15% 0px\",\n  },\n});\nfunction formatHour(hour10) {\n  hour10 = new Date(hour10 * 1000);\n  hour10 = hour10.getHours();\n  var ampm10 = hour10 >= 12 ? \"PM\" : \"AM\";\n  hour10 = hour10 % 12;\n  hour10 = hour10 ? hour10 : 12;\n  let str = hour10 + \" \" + ampm10;\n  return str;\n}\nfunction getImageUrl(icon) {\n  let url = \"http://openweathermap.org/img/wn/\" + icon + \"@2x.png\";\n  return url;\n}\nclass Weather extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  renderHourly() {\n    if (this.props.weatherData.hourly.length > 0) {\n      let i = 1;\n      return this.props.weatherData.hourly.map((element, index) => {\n        if (i <= 4) {\n          i++;\n          return (\n            <Grid item xs={3} key={element.dt}>\n              <Typography\n                align=\"center\"\n                variant=\"subtitle2\"\n                style={{ color: \"white\" }}\n              >\n                {formatHour(element.dt)}\n              </Typography>\n              <Typography\n                align=\"center\"\n                variant=\"h6\"\n                color=\"primary\"\n                style={{ color: \"white\" }}\n              >\n                {Math.round(element.temp - 273)}\n                &deg;\n              </Typography>\n              <img\n                src={getImageUrl(element.weather[0].icon)}\n                style={{\n                  display: \"block\",\n                  margin: \"-15px auto\",\n                  padding: \"0\",\n                  width: \"50px\",\n                }}\n              />\n            </Grid>\n          );\n        }\n      });\n    } else {\n      return null;\n    }\n  }\n  render() {\n    const { classes } = this.props;\n    const months = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n    ];\n    let timeStamp = new Date(this.props.weatherData.current.dt * 1000);\n    let months1 = months[timeStamp.getMonth()];\n    let date = timeStamp.getDate();\n\n    date = date + months1;\n\n    //let url = process.env.PUBLIC_URL + \"./rain1.webp\";\n    let url1;\n    let icon = this.props.weatherData.current.weather[0].icon;\n    if (icon == \"50d\") {\n      url1 = \"./haze_day.jpg\";\n    }\n    //\n    else if (icon == \"04n\" || icon == \"04d\") {\n      url1 = \"./cloudy.jpeg\";\n    }\n    //\n    else if (icon == \"10n\" || icon == \"09n\" || icon == \"10d\" || icon == \"09d\") {\n      url1 = \"./rain1.webp\";\n    }\n    //\n    else if (icon == \"11n\" || icon == \"11d\") {\n      url1 = \"./thunderStorm.jpg\";\n    }\n    //\n    else {\n      url1 = \"./else.jpg\";\n    }\n\n    return (\n      <div\n        style={{\n          backgroundImage: `url(${url1})`,\n        }}\n        className={classes.WeatherDiv1}\n      >\n        <Typography align=\"center\" variant=\"h5\" style={{ color: \"white\" }}>\n          {this.props.CT_NAME}, {date}\n        </Typography>\n\n        <Grid container style={{ padding: 20 }}>\n          <Grid item lg={6} xs={6}>\n            <Typography\n              align=\"center\"\n              variant=\"subtitle2\"\n              style={{ color: \"white\" }}\n            >\n              Day {Math.round(this.props.weatherData.daily[0].temp.day - 273)}\n              &deg; - Night{\" \"}\n              {Math.round(this.props.weatherData.daily[0].temp.night - 273)}\n              &deg;\n            </Typography>\n            <Typography align=\"center\" variant=\"h3\" style={{ color: \"white\" }}>\n              {Math.round(this.props.weatherData.current.temp - 273)}&deg;C\n            </Typography>\n            <Typography\n              align=\"center\"\n              variant=\"subtitle2\"\n              style={{ color: \"white\" }}\n            >\n              Feels Like{\" \"}\n              {this.props.weatherData.hourly.length > 0\n                ? Math.round(this.props.weatherData.hourly[0].feels_like - 273)\n                : 0}\n              &deg;\n            </Typography>\n          </Grid>\n          <Grid item lg={6} xs={6}>\n            <img\n              src={getImageUrl(this.props.weatherData.current.weather[0].icon)}\n              className={classes.images}\n            />\n            <Typography\n              align=\"center\"\n              variant=\"subtitle1\"\n              style={{ color: \"white\" }}\n            >\n              {this.props.weatherData.current.weather[0].main}\n            </Typography>\n          </Grid>\n        </Grid>\n        <hr />\n        <Grid container>{this.renderHourly()}</Grid>\n      </div>\n    );\n  }\n}\nexport default withStyles(styles)(Weather);\n","import React from \"react\";\nimport { Grid, Paper, Typography } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Axios from \"axios\";\nimport AppConfig from \"../../constants/appConfig\";\nimport Weather from \"../weather\";\nimport Weather2 from \"../weather\";\nimport { Spin } from \"antd\";\nimport Clock from \"react-clock\";\nimport \"react-clock/dist/Clock.css\";\n\nconst styles = (theme) => ({\n  Spinner: {\n    textAlign: \"center\",\n    background: \"rgba(0, 0, 0, 0.05)\",\n    borderRadius: \"4px\",\n    marginBottom: \"20px\",\n    padding: \"153px 50px\",\n    height: \"100%\",\n    //margin: \"20px 0\",\n  },\n  textColor: {\n    color: \"#7f7f7f\",\n  },\n  images: {\n    borderRadius: \"50%\",\n    display: \"block\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    width: \"50%\",\n  },\n  personalInfo: {\n    padding: \"30px 0px\",\n    backgroundColor: \"#000000\",\n    height: \"100%\",\n  },\n  sections: {\n    marginTop: \"20px\",\n  },\n  ClockPos: {\n    backgroundColor: \"#ffffff\",\n    borderColor: \"#ffffff\",\n    borderRadius: \"50%\",\n  },\n  containerDiv: {\n    maxWidth: \"1500px\",\n    margin: \"0 auto\",\n  },\n});\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      weatherData1: {\n        current: {\n          dt: 0,\n          temp: 0,\n          feels_like: 0,\n          weather: [\n            {\n              icon: \"50n\",\n              main: \"\",\n            },\n          ],\n        },\n        daily: [\n          {\n            temp: {\n              day: 0,\n              night: 0,\n            },\n          },\n        ],\n        hourly: [],\n      },\n      weatherData2: {\n        current: {\n          dt: 0,\n          temp: 0,\n          feels_like: 0,\n          weather: [\n            {\n              icon: \"50n\",\n              main: \"\",\n            },\n          ],\n        },\n        daily: [\n          {\n            temp: {\n              day: 0,\n              night: 0,\n            },\n          },\n        ],\n        hourly: [],\n      },\n      loading: false,\n      noInternet1: false,\n      noInternet2: false,\n    };\n  }\n  componentDidMount() {\n    this.setState({\n      loading: true,\n    });\n    setInterval(() => this.setState({ date: new Date() }), 1000);\n    Axios.get(\n      \"https://api.openweathermap.org/data/2.5/onecall?lat=23.8103&lon=90.4125&appid=\" +\n        AppConfig.WEATHER_API_KEY\n    )\n      .then((response) => {\n        this.setState({\n          weatherData1: response.data,\n        });\n        setTimeout(() => {\n          this.setState({ loading: false });\n        }, 1500);\n      })\n      .catch((response) => {\n        this.setState({ loading: false, noInternet1: true });\n      });\n    Axios.get(\n      \"https://api.openweathermap.org/data/2.5/onecall?lat=23.5450&lon=89.1726&appid=\" +\n        AppConfig.WEATHER_API_KEY\n    )\n      .then((response) => {\n        this.setState({\n          weatherData2: response.data,\n        });\n      })\n      .catch((response) => {\n        this.setState({ loading: false, noInternet2: true });\n      });\n  }\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className=\"px-lg-5 px-md-5\">\n        <div className=\"px-lg-5 px-md-5\">\n          <Paper elevation={24} className={classes.containerDiv}>\n            <Grid container spacing={0} className={classes.sections}>\n              <Grid item lg={4} md={6} sm={12} xs={12}>\n                <div className={classes.personalInfo}>\n                  <img src={\"./01.jpg\"} className={classes.images} />\n                  <Typography align=\"center\" variant=\"h5\" color=\"primary\">\n                    Nakib Hossain\n                  </Typography>\n                  <Typography align=\"center\" variant=\"h6\" color=\"secondary\">\n                    Software Developer\n                  </Typography>\n                  <Typography\n                    align=\"center\"\n                    variant=\"subtitle2\"\n                    className={classes.textColor}\n                  >\n                    hussain0296@gmail.com\n                  </Typography>\n                  <Typography\n                    align=\"center\"\n                    variant=\"subtitle2\"\n                    className={classes.textColor}\n                  >\n                    +8801967101376\n                  </Typography>\n                </div>\n              </Grid>\n              <Grid item lg={8} md={6} sm={12} xs={12}>\n                {this.state.loading ? (\n                  <div className={classes.Spinner}>\n                    <Spin size=\"large\" />\n                  </div>\n                ) : (\n                  <Grid container>\n                    <Grid item lg={6} xs={12}>\n                      {this.state.noInternet1 == false ? (\n                        <Weather\n                          weatherData={this.state.weatherData1}\n                          CT_NAME=\"Dhaka\"\n                        />\n                      ) : null}\n                    </Grid>\n                    <Grid item lg={6} xs={12}>\n                      {this.state.noInternet2 == false ? (\n                        <Weather\n                          weatherData={this.state.weatherData2}\n                          CT_NAME=\"Jhenidah\"\n                        />\n                      ) : null}\n                    </Grid>\n                  </Grid>\n                )}\n              </Grid>\n            </Grid>\n          </Paper>\n          <div\n            style={{ display: \"block\", width: \"150px\", margin: \"20px auto\" }}\n          >\n            <Clock\n              value={this.state.date}\n              hourHandLength={60}\n              hourHandOppositeLength={20}\n              hourHandWidth={8}\n              hourMarksLength={20}\n              hourMarksWidth={8}\n              minuteHandLength={90}\n              minuteHandOppositeLength={20}\n              minuteHandWidth={6}\n              minuteMarksWidth={3}\n              secondHandLength={75}\n              secondHandOppositeLength={25}\n              secondHandWidth={3}\n              size={150}\n              minuteMarksLength={6}\n              renderHourMarks={true}\n              renderMinuteHand={true}\n              renderMinuteMarks={true}\n              renderSecondHand={true}\n              className={classes.ClockPos}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default withStyles(styles)(Home);\n","import React, { Component } from \"react\";\nimport {\n  MDBNavbar,\n  MDBNavbarBrand,\n  MDBNavbarNav,\n  MDBNavItem,\n  MDBNavLink,\n  MDBNavbarToggler,\n  MDBCollapse,\n} from \"mdbreact\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nclass NavbarPage extends Component {\n  state = {\n    isOpen: false,\n  };\n\n  toggleCollapse = () => {\n    this.setState({ isOpen: !this.state.isOpen });\n  };\n\n  render() {\n    return (\n      <Router>\n        <MDBNavbar color=\"black\" dark expand=\"md\" className=\"px-lg-5 px-md-5\">\n          <MDBNavbarBrand className=\"pl-lg-5\">\n            <img src={\"./icon4.png\"} width=\"50\" />\n          </MDBNavbarBrand>\n          <MDBNavbarToggler onClick={this.toggleCollapse} />\n          <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\n            <MDBNavbarNav right className=\"pr-lg-5\">\n              <MDBNavItem active>\n                <MDBNavLink to=\"/myportfolio/\">Home</MDBNavLink>\n              </MDBNavItem>\n              <MDBNavItem>\n                <MDBNavLink to=\"#!\">Projects</MDBNavLink>\n              </MDBNavItem>\n              <MDBNavItem>\n                <MDBNavLink to=\"#!\">Certifications</MDBNavLink>\n              </MDBNavItem>\n              <MDBNavItem>\n                <MDBNavLink to=\"#!\">My Blogs</MDBNavLink>\n              </MDBNavItem>\n              <MDBNavItem>\n                <MDBNavLink to=\"#!\">Gallery</MDBNavLink>\n              </MDBNavItem>\n              <MDBNavItem>\n                <MDBNavLink to=\"#!\">Contact Me</MDBNavLink>\n              </MDBNavItem>\n            </MDBNavbarNav>\n          </MDBCollapse>\n        </MDBNavbar>\n      </Router>\n    );\n  }\n}\n\nexport default NavbarPage;\n","import { createMuiTheme } from \"@material-ui/core/styles\";\nimport { cyan, green } from \"@material-ui/core/colors\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"light\",\n    primary: {\n      // light: will be calculated from palette.primary.main,\n      main: cyan[500],\n      dark: cyan[700],\n      contrastText: \"#fff\",\n    },\n    secondary: {\n      main: green[400],\n      // dark: will be calculated from palette.secondary.main,\n      contrastText: \"#fff\",\n    },\n    // error: will use the default color\n  },\n});\n\nexport default theme;\n","import React from \"react\";\nimport Header from \"../components/header\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport darkTheme from \"../constants/theme\";\nconst Layout = (props) => {\n  return (\n    <div>\n      <Header />\n      <MuiThemeProvider theme={darkTheme}>{props.children}</MuiThemeProvider>\n    </div>\n  );\n};\nexport default Layout;\n","import React, { Component } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Home from \"./components/Home\";\n\n// import Admin from './components/Admin';\n// import Login from './containers/login';\n\n// import Logout from './containers/logout';\n\nimport Layout from \"./hoc/layout\";\n// import Auth from './hoc/auth';\n\nclass Routes extends Component {\n  render() {\n    return (\n      <Layout>\n        <Switch>\n          <Route path=\"/myportfolio\" exact component={Home} />\n        </Switch>\n      </Layout>\n    );\n  }\n}\nexport default Routes;\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"antd/dist/antd.css\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport Routes from \"./routes\";\r\n\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Routes />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}